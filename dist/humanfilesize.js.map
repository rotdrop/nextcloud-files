{"version":3,"sources":["../lib/humanfilesize.ts"],"names":["humanList","formatFileSize","size","skipSmallSizes","order","Math","floor","log","min","length","readableFormat","relativeSize","pow","toFixed","parseFloat","substr","toLocaleString"],"mappings":";;;;;;;;;AAAA;;AAEA,IAAMA,SAAS,GAAG,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,EAAkB,IAAlB,EAAwB,IAAxB,CAAlB;;AAEO,SAASC,cAAT,CAAwBC,IAAxB,EAA+E;AAAA,MAAzCC,cAAyC,uEAAf,KAAe;AAErF;AACA,MAAIC,KAAK,GAAGF,IAAI,GAAG,CAAP,GAAWG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,GAAL,CAASL,IAAT,IAAiBG,IAAI,CAACE,GAAL,CAAS,IAAT,CAA5B,CAAX,GAAyD,CAArE,CAHqF,CAIrF;;AACAH,EAAAA,KAAK,GAAGC,IAAI,CAACG,GAAL,CAASR,SAAS,CAACS,MAAV,GAAmB,CAA5B,EAA+BL,KAA/B,CAAR;AACA,MAAMM,cAAc,GAAGV,SAAS,CAACI,KAAD,CAAhC;AACA,MAAIO,YAAY,GAAG,CAACT,IAAI,GAAGG,IAAI,CAACO,GAAL,CAAS,IAAT,EAAeR,KAAf,CAAR,EAA+BS,OAA/B,CAAuC,CAAvC,CAAnB;;AACA,MAAIV,cAAc,KAAK,IAAnB,IAA2BC,KAAK,KAAK,CAAzC,EAA4C;AAC3C,QAAIO,YAAY,KAAK,KAArB,EAA4B;AAC3B,aAAO,QAAP;AACA,KAFD,MAEO;AACN,aAAO,MAAP;AACA;AACD;;AACD,MAAIP,KAAK,GAAG,CAAZ,EAAe;AACdO,IAAAA,YAAY,GAAGG,UAAU,CAACH,YAAD,CAAV,CAAyBE,OAAzB,CAAiC,CAAjC,CAAf;AACA,GAFD,MAEO,IAAIF,YAAY,CAACI,MAAb,CAAoBJ,YAAY,CAACF,MAAb,GAAsB,CAA1C,EAA6C,CAA7C,MAAoD,IAAxD,EAA8D;AACpEE,IAAAA,YAAY,GAAGA,YAAY,CAACI,MAAb,CAAoB,CAApB,EAAuBJ,YAAY,CAACF,MAAb,GAAsB,CAA7C,CAAf;AACA,GAFM,MAEA;AACNE,IAAAA,YAAY,GAAGG,UAAU,CAACH,YAAD,CAAV,CAAyBK,cAAzB,CAAwC,wBAAxC,CAAf;AACA;;AACD,SAAOL,YAAY,GAAG,GAAf,GAAqBD,cAA5B;AACA","sourcesContent":["import { getLanguage } from '@nextcloud/l10n'\n\nconst humanList = ['B', 'KB', 'MB', 'GB', 'TB'];\n\nexport function formatFileSize(size: number, skipSmallSizes: boolean = false): string {\n\n\t// Calculate Log with base 1024: size = 1024 ** order\n\tlet order = size > 0 ? Math.floor(Math.log(size) / Math.log(1024)) : 0;\n\t// Stay in range of the byte sizes that are defined\n\torder = Math.min(humanList.length - 1, order);\n\tconst readableFormat = humanList[order];\n\tlet relativeSize = (size / Math.pow(1024, order)).toFixed(1);\n\tif (skipSmallSizes === true && order === 0) {\n\t\tif (relativeSize !== \"0.0\") {\n\t\t\treturn '< 1 KB';\n\t\t} else {\n\t\t\treturn '0 KB';\n\t\t}\n\t}\n\tif (order < 2) {\n\t\trelativeSize = parseFloat(relativeSize).toFixed(0);\n\t} else if (relativeSize.substr(relativeSize.length - 2, 2) === '.0') {\n\t\trelativeSize = relativeSize.substr(0, relativeSize.length - 2);\n\t} else {\n\t\trelativeSize = parseFloat(relativeSize).toLocaleString(getLanguage());\n\t}\n\treturn relativeSize + ' ' + readableFormat;\n}\n"],"file":"humanfilesize.js"}